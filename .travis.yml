os: linux
dist: focal
language: python

stages:
  - check
  - test
  - publish

# List of Python / Django versions to test
python:
  - 3.9
  - 3.8
  - 3.7.9
  - 3.6.12
  - 3.5.10
  - 2.7.18
env:
  - DJANGO_VERSION=3.1.*
  - DJANGO_VERSION=3.0.*
  - DJANGO_VERSION=2.2.*
  - DJANGO_VERSION=2.1.*
  - DJANGO_VERSION=2.0.*
  - DJANGO_VERSION=1.11.*

# Default job, ran on stage "test", expanded to all environments (python/django versions)
install:
  # Setup environment
  - pip install -U poetry
  - poetry install -n -v
  - poetry run pip install -U django==$DJANGO_VERSION
script:
  # Run standard tests, collecting coverage report into 'coverage.xml'
  - poetry run pytest --cov=modernrpc
after_success:
  - pip install coveralls codacy-coverage
  # Submit coverage results to coveralls.io
  - coveralls
  # Submit coverage results to codecov.io
  - bash <(curl -s https://codecov.io/bash)
  # Submit coverage results to codacy.com
  - python-codacy-coverage -r coverage.xml

jobs:
  allow_failures:
    - stage: check

  include:
    - name: Flake8
      stage: check
      script:
        - poetry run flake8
      after_success: skip

    - name: Publish on Pypi.org
      stage: publish
      install:
        - pip install -U poetry
        - poetry config repositories.testpypi https://test.pypi.org/legacy/
      # Does nothing in script and after_success phases, but don't skip or it will cause deploy phase to be ignored
      script: true
      after_success: true
      deploy:
        edge: true
        provider: script
        script: poetry publish --build -u __token__ -p $TESTPYPI_SECRET -r testpypi
        on:
          repo: alorence/django-modern-rpc
          tags: true

  exclude:
    # See https://docs.djangoproject.com/en/1.11/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=1.11.*
      python: 3.8
    - env: DJANGO_VERSION=1.11.*
      python: 3.9

    # See https://docs.djangoproject.com/en/2.0/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=2.0.*
      python: 2.7.18
    - env: DJANGO_VERSION=2.0.*
      python: 3.8
    - env: DJANGO_VERSION=2.0.*
      python: 3.9

    # See https://docs.djangoproject.com/en/2.1/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=2.1.*
      python: 2.7.18
    - env: DJANGO_VERSION=2.1.*
      python: 3.8
    - env: DJANGO_VERSION=2.1.*
      python: 3.9

    # See https://docs.djangoproject.com/en/2.2/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=2.2.*
      python: 2.7.18

    # See https://docs.djangoproject.com/en/3.0/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=3.0.*
      python: 2.7.18
    - env: DJANGO_VERSION=3.0.*
      python: 3.5.10

    # See https://docs.djangoproject.com/en/3.1/faq/install/#what-python-version-can-i-use-with-django
    - env: DJANGO_VERSION=3.1.*
      python: 2.7.18
    - env: DJANGO_VERSION=3.1.*
      python: 3.5.10
